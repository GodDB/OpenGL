#version 330

uniform mat4 transform_model;
uniform mat4 transform_proj;
uniform mat4 transform_view;
uniform vec3 ambient_color;

layout(location = 0) in vec3 position;
layout(location = 1) in vec2 texCoord;
layout(location = 2) in vec3 normal;

out vec2 v_TexCoord; //버텍스 셰이더에서 추가적으로 출력하는 데이터(varying)
out vec3 v_Normal;
out vec3 v_ambient_color;

void main(){

    // gl_Position은 최종적으로 clip space의 값이 지정되어야 함.
    gl_Position = transform_proj * transform_view * transform_model * vec4(position, 1.0f);
    
    v_TexCoord = texCoord; //vertex 변환에 따라 바뀌지 않으므로 그대로 넘겨주면 됨
    
    // 이건 잘 모르겠음;;; 왜 world transform만 연산해줘야 하며, 왜 그걸 역행렬로 만들고 트랜스포즈 해야하는지;;; 설명을 안해주네
    //https://www.youtube.com/watch?v=d3EUd2HxsO4&app=desktop
    v_Normal = normalize(transpose(inverse(mat3(transform_model))) * normal);
    
    v_ambient_color = ambient_color;
}
