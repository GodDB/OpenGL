#version 330 

// fragment shader는 face의 fragment data에 컬러를 입히는 작업을 한다.

// fragment shader의 output으로 gpu에게 전달된다.
layout(location = 0) out vec4 color;

// vertex shader에게 전달받은 데이터 (물론 rasterizer 단계를 거쳐왔기 때문에 좀 더 연산되어 있음)
in vec2 v_TexCoord;
in vec3 v_Normal;
in vec3 v_ambient_color;
in vec3 v_diffuse_direction;

//texture는 sampler2D 타입
uniform sampler2D u_Texture;

void main()
{
   
    //--uvchecker 입혀 보기,
    // u_Texture는 이미지이다. 그래서 그 이미지에서 해당 textCoord와 매핑되는 컬러값을 가져오라는 함수가 texture()이다.
    
    float diffuse_factor = max(dot(-v_diffuse_direction, v_Normal), 0.0f);
    vec3 diffuse_direction = diffuse_factor * v_ambient_color;
    color = texture(u_Texture, v_TexCoord) * vec4(diffuse_direction + v_ambient_color, 1.0f);

}
